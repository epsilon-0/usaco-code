/*
ID: mathgen2
PROG: cowtour
LANG: C++11
*/

#include <bits/stdc++.h>

using namespace std;

const int INF = 999999;

bool graph[151][151];
double pasture[151][2];
int pastures;
double dist[151][151];

int main() {
  ifstream fin("cowtour.in");
  ofstream fout("cowtour.out");

  for(int i = 0; i < 150; i++){
    for(int j = 0; j < 150; j++){
      dist[i][j] = INF;
    }
  }

  fin >> pastures;

  for(int i = 0; i < pastures; i++){
    fin >> pasture[i][0] >> pasture[i][1];
  }

  char connected;
  for(int i = 0; i < pastures; i++){
    for(int j = 0; j < pastures; j++){
      fin >> connected;
      graph[i][j] = (connected == '1');
    }
  }
  
  // FLOYD WARSHALL
  for(int i = 0; i < pastures; i++){
    dist[i][i] = 0;
    for(int j = 0; j < pastures; j++){
      if(graph[i][j]){
        	dist[i][j] = sqrt(pow(pasture[i][0]-pasture[j][0], 2) + 
			  pow(pasture[i][1]-pasture[j][1], 2));
      }
    }
  }

  for(int k = 0; k < pastures; k++){
    for(int i = 0; i < pastures; i++){
      for(int j = 0; j < pastures; j++){
      	dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
      }
    }
  }

}
